WEBVTT

00:01.250 --> 00:04.880
Everyone in this lecture we're going to talk about binary numbers is done.

00:05.360 --> 00:11.180
The reason why we're going to understand this by new numbers is because it will help us to develop a

00:11.180 --> 00:16.040
better understanding of how machines work at the very lowest level, OK?

00:16.640 --> 00:18.710
And we have seen differently types as well.

00:18.710 --> 00:24.590
So different data types are also stored as binary number inside the memory of the computer.

00:25.100 --> 00:28.500
So on any source code that we have written, right?

00:28.520 --> 00:34.760
So we would generally write the code in a programming language that can be C++, Java or Python.

00:35.420 --> 00:41.870
Then that code goes through a application that we call as compiler or an interpreter.

00:42.470 --> 00:47.210
And this is going to convert this into machine code in case of C++.

00:47.360 --> 00:53.240
OK, the compiler generates a machine called this machine code is in the form of zeros and ones, right?

00:54.330 --> 01:02.430
So this is what a binary number looks like and all the instructions that we write, they are converted

01:02.430 --> 01:10.650
into binary instructions that the processor can execute and all the data that we have that is also converted

01:10.650 --> 01:13.210
into binary data for storage.

01:13.950 --> 01:19.980
So learning about that, this number will help us to develop a better understanding of how machines

01:19.980 --> 01:20.280
work.

01:20.880 --> 01:28.630
And yeah, so generally what we have until now, we have frequently worked with the decimal number system.

01:28.680 --> 01:29.730
We, as humans write.

01:30.880 --> 01:31.290
And.

01:33.280 --> 01:41.350
So what what we have seen in decimal number system is that we have 10 unique, did it OK if I talk about

01:41.760 --> 01:49.810
the decimal numbers, we have 10 unique digits from one to one zero two nine eight zero one two three

01:49.810 --> 01:52.690
four five six seven, eight and nine.

01:52.690 --> 01:58.780
So we have 10 unique digits and we say, OK, the base is also 10, right?

01:59.530 --> 02:01.330
And what is the meaning of this dom base?

02:01.900 --> 02:03.690
Let us take an example of a number.

02:03.700 --> 02:05.800
Let's say our number is 234.

02:07.030 --> 02:10.120
The meaning of base is that this number is multiplied.

02:11.050 --> 02:14.680
It is generated by combining the powers of.

02:17.870 --> 02:23.560
So by combining the powers of 10, Richard and Bob Zito and Bauer, one and then Bob.

02:24.730 --> 02:25.660
So what happens?

02:27.380 --> 02:35.170
Each each place will be multiplied with the power of 10 to get get the contribution of that place,

02:35.180 --> 02:35.410
OK?

02:35.850 --> 02:42.560
For example, I will multiply two with 10 squared and I will add three multiplied with 10 power, one

02:42.560 --> 02:45.210
plus four multiplied with end poverty.

02:45.410 --> 02:49.790
So this becomes equal to 200 plus 30 plus four.

02:50.360 --> 02:53.700
And this is how the number 234 has been generated, OK?

02:54.620 --> 02:59.990
With each place, we have a power that is attached to that particular place.

03:00.680 --> 03:02.750
And this is what we generally work.

03:02.750 --> 03:08.450
As with this number system we'll get right now, we are going to talk about binding numbers system.

03:08.450 --> 03:12.290
So let us try to interpret a number in the binding base.

03:12.890 --> 03:17.540
Let's say we have binary means two zeros and ones.

03:17.990 --> 03:21.950
And now why only do two digits OK?

03:22.310 --> 03:29.090
The reason is the computer hardware, as I discussed it, made up of small, small electrical cells.

03:29.450 --> 03:33.800
OK, and they can store some judges if a cell is storing some charge.

03:34.250 --> 03:35.690
We said this represents one.

03:35.810 --> 03:42.350
And if it is not storing any geometries, it is representing the number to any data that we have to

03:42.350 --> 03:44.450
stored inside the heart of it.

03:45.230 --> 03:48.350
It must be converted into this form in the form of zeros and ones.

03:48.380 --> 03:54.470
OK, so let's take an example of a number that is written in binary and we will try to interpret it.

03:55.040 --> 03:57.680
Let's say one zero one zero one one later.

03:57.680 --> 03:58.490
This is the number.

03:59.990 --> 04:04.050
And we are storing this inside a certain cell in a set of cells.

04:04.070 --> 04:04.520
It's a.

04:05.590 --> 04:06.070
Now.

04:07.540 --> 04:11.740
What this number is going to represent, so here the basis.

04:11.990 --> 04:12.280
OK.

04:12.670 --> 04:19.930
That means if you want to find out what this exact number is, you have to multiply the corresponding

04:19.930 --> 04:20.350
bits.

04:21.550 --> 04:26.620
With powers of trade, so does this this places do but zero to power one.

04:27.220 --> 04:29.680
It was quicker to kill two powerful.

04:30.750 --> 04:32.160
And two par five, OK.

04:32.970 --> 04:38.700
Similarly, if there are more, but the higher powers of two will be used to what we will multiply to

04:38.700 --> 04:46.130
power five with one, we will multiply zero of it to power, four will multiply one with two skill,

04:47.040 --> 04:54.270
then two square into zero, then two power one and one, then the power zero into one.

04:54.480 --> 04:59.840
So we are multiplying these two, these two, these two, and adding that by adding them up.

04:59.850 --> 05:02.010
So this will actually give us up in digit.

05:02.850 --> 05:10.680
This is going to be nothing but 32 plus eight plus two plus one, right?

05:11.350 --> 05:13.800
So this number is actually the number 43.

05:14.460 --> 05:21.690
That means if you understood the number 43 inside the memory of the computer, this is how it would

05:21.690 --> 05:22.350
be stored, OK?

05:22.440 --> 05:24.300
This is how it would be stored.

05:24.660 --> 05:27.930
That is a brief introduction about the binding number system.

05:28.500 --> 05:31.380
And in the next lecture, we will dive into more details.

05:31.870 --> 05:33.330
And that's all for this video.
