0
1
00:00:01,320 --> 00:00:08,640
In our first homework set number one on the last three concepts about static, friend, and const.
1

2
00:00:08,640 --> 00:00:15,600
First of all, why do you think that C++ doesn't allow us to create a const static member function?
2

3
00:00:16,110 --> 00:00:22,550
If you tried also to use this pointer inside...
3

4
00:00:22,720 --> 00:00:28,720
..., sorry, C++ doesn't allow using this pointer to access a static member
4

5
00:00:28,740 --> 00:00:29,050
data.
5

6
00:00:29,130 --> 00:00:29,840
Why do you think so?
6

7
00:00:31,830 --> 00:00:32,820
Read this program,
7

8
00:00:33,050 --> 00:00:34,740
guess what is the output and why.
8

9
00:00:38,010 --> 00:00:45,960
This assignment is about the configuration manager, section about some ideas behind it relevant
9

10
00:00:45,960 --> 00:00:47,040
to design patterns.
10

11
00:00:47,490 --> 00:00:53,430
So a configuration manager might have different meanings in industry, but one meaning is something
11

12
00:00:53,430 --> 00:00:55,850
that's loading a lot of configuration that we have,
12

13
00:00:56,220 --> 00:01:01,830
and typically this configuration is just static and it's typically involved servers IPs,
13

14
00:01:01,830 --> 00:01:05,290
databases paths and so on, and typically also might be heavy
14

15
00:01:05,400 --> 00:01:09,980
So it's a good idea to cash them for frequent requests. After you developed it,
15

16
00:01:09,990 --> 00:01:16,100
you notice that there are several code parts that create a separate object, where is the problem?
16

17
00:01:16,380 --> 00:01:22,530
The problem is it's actually loading the same things, but every time it takes like 30 minutes to load
17

18
00:01:22,530 --> 00:01:25,320
the data from the memory.
18

19
00:01:25,980 --> 00:01:32,150
So your team lead suggests the following: change the class to allow only one instance to be created.
19

20
00:01:32,400 --> 00:01:37,120
In other words, no way for others to make 2 different objects in memory.
20

21
00:01:37,470 --> 00:01:43,350
This way you are forcing everyone to use the same object, so it would be loaded once, cashed once,
21

22
00:01:43,470 --> 00:01:47,010
and no one can use 2 object of it, so it load once,
22

23
00:01:47,010 --> 00:01:47,580
and that's it.
23

24
00:01:48,210 --> 00:01:49,200
Here is the current
24

25
00:01:49,200 --> 00:01:55,050
code, it has some configuration, a boolean if it is loaded so far or not. We create an object, and then
25

26
00:01:55,050 --> 00:01:56,670
we call load function to load it.
26

27
00:01:56,940 --> 00:01:59,040
If it is loaded then that's all.
27

28
00:01:59,040 --> 00:01:59,730
If not loaded,
28

29
00:01:59,730 --> 00:02:06,870
we loaded and mark loaded with true. This code by the way, like kind of lazy loading. You load things only when you would
29

30
00:02:06,870 --> 00:02:07,590
like to load them.
30

31
00:02:07,980 --> 00:02:10,140
Anyway this is a current configuration manager.
31

32
00:02:10,320 --> 00:02:14,670
There is some function right now that creates the manager, another function that creates the manager.
32

33
00:02:14,850 --> 00:02:18,360
Notice every one of them is doing some lazy loading.
33

34
00:02:18,420 --> 00:02:24,330
So every one of them is taking like 30 minutes, we would like to solve this problem. Code review:
34

35
00:02:24,600 --> 00:02:27,450
We have a project with the following requirements.
35

36
00:02:27,450 --> 00:02:28,590
It is for classes
36

37
00:02:28,590 --> 00:02:36,210
so there is a class for a student and his grade per course. Grade can be a maximum of 100 at least now,
37

38
00:02:36,360 --> 00:02:41,040
and this is the current grade, for example, for one course. You should provide functionalities
38

39
00:02:41,040 --> 00:02:43,460
for printing or retrieving.
39

40
00:02:43,680 --> 00:02:47,550
Also, you need to track how many times the printing function is called.
40

41
00:02:47,790 --> 00:02:51,150
It's important to keep statistics sometimes about the different functionalities.
41

42
00:02:51,450 --> 00:02:56,760
So the developer coded it actually the following that you are going to review. This is a global static
42

43
00:02:56,760 --> 00:02:57,950
total prints variable.
43

44
00:02:58,800 --> 00:03:02,580
Here are some ID, grades vector and course name vector.
44

45
00:03:02,940 --> 00:03:08,460
There are some constructors here, adjust_grade is trying to be careful with negative values or wrong values.
45

46
00:03:09,000 --> 00:03:12,090
There is a function that adds grades, it takes a grade and the course name.
46

47
00:03:12,600 --> 00:03:15,150
If the course's name already exists, it just ignore it,
47

48
00:03:15,150 --> 00:03:16,740
It doesn't update the current grade.
48

49
00:03:17,160 --> 00:03:18,150
This is the print
49

50
00:03:18,150 --> 00:03:19,350
all courses function.
50

51
00:03:19,500 --> 00:03:23,550
It's incrementing this global variable and then printing all the current data.
51

52
00:03:23,790 --> 00:03:29,970
Some getters here, totoal_grade_sum is just summing the total grade of the student and just returning
52

53
00:03:29,970 --> 00:03:30,120
it.
53

54
00:03:30,660 --> 00:03:32,780
Please read the code very carefully.
54

55
00:03:33,000 --> 00:03:40,200
This is an example of creating an object, adding three subjects, printing it. Now after reading the code
55

56
00:03:40,200 --> 00:03:44,040
very carefully and understand it, figure out 2 coding bugs.
56

57
00:03:44,580 --> 00:03:49,080
There are several OOP violations or design issues in this code.
57

58
00:03:49,290 --> 00:03:50,070
What are they?
58

59
00:03:51,570 --> 00:03:52,740
Figure out something
59

60
00:03:52,740 --> 00:03:57,900
if we need to change it in the code, then there would be a lot of changes in the code, and how to fix that.
60

61
00:03:57,900 --> 00:04:00,630
There are some naming inconsistency,
61

62
00:04:00,660 --> 00:04:01,620
figure that out.
62

63
00:04:01,980 --> 00:04:07,200
Also, suggest two better variable naming to some of the functions. For the function
63

64
00:04:07,200 --> 00:04:13,290
get_courses of student info, integer position, maybe suggest also a better declaration, like a different way
64

65
00:04:13,290 --> 00:04:14,460
to declare this function.
65

66
00:04:15,720 --> 00:04:15,900
That's it.
