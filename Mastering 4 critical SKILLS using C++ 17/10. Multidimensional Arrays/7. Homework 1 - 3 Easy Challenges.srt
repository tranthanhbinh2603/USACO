0
1
00:00:01,200 --> 00:00:07,670
The first homework set for multidimensional arrays, in the first one would like to compare two rows you
1

2
00:00:07,680 --> 00:00:12,570
will start to by reading N&M for number of rows  and columns, three and four, three rows, four
2

3
00:00:12,570 --> 00:00:13,050
columns.
3

4
00:00:13,350 --> 00:00:17,700
Then you will read the matrix of N times M values here, three rows, four columns.
4

5
00:00:18,180 --> 00:00:21,870
Then you will read number Q three here for Q queries.
5

6
00:00:22,290 --> 00:00:28,560
Each query is two integers like one-two, two-three, one-three, the first and second row indices
6

7
00:00:28,560 --> 00:00:29,300
but 1-based.
7

8
00:00:29,550 --> 00:00:31,380
So one and two is row number one,
8

9
00:00:31,470 --> 00:00:34,440
two is row number two, two and three is row number one
9

10
00:00:35,370 --> 00:00:37,890
row number three, one and three is rule number one,
10

11
00:00:38,070 --> 00:00:43,660
row number three, they are one-based indices for the first and the second row you will print 
11

12
00:00:43,710 --> 00:00:44,340
Yes
12

13
00:00:44,340 --> 00:00:51,900
If all of the values of the first row are less than the all of the values in the, less than the second
13

14
00:00:52,170 --> 00:00:53,790
row in a corresponding way.
14

15
00:00:54,180 --> 00:00:57,060
For example, here, the first row one and two,
15

16
00:00:57,180 --> 00:01:01,770
so this rule and this rule. Is eight less than three?
16

17
00:01:02,130 --> 00:01:04,380
No, then we don't need to compare anyone.
17

18
00:01:04,500 --> 00:01:06,420
We are done, now
18

19
00:01:06,630 --> 00:01:10,890
second row and third row is three less than fourteen? yes.
19

20
00:01:11,100 --> 00:01:12,900
Fifteen less than twenty five? yes.
20

21
00:01:12,900 --> 00:01:16,430
Twenty-seven, less than twenty-nine? Yes. six is less than ten? Yes.
21

22
00:01:16,680 --> 00:01:20,540
So for all of the row values, we are less than the corresponding one,
22

23
00:01:20,550 --> 00:01:21,660
so the answer is yes.
23

24
00:01:22,170 --> 00:01:23,580
the last one is one and three,
24

25
00:01:23,760 --> 00:01:26,060
so the first and third row, eight.
25

26
00:01:26,070 --> 00:01:27,150
less than fourteen?
26

27
00:01:27,150 --> 00:01:28,230
Yes. sixteen
27

28
00:01:28,230 --> 00:01:29,550
less than twenty five?
28

29
00:01:29,550 --> 00:01:29,850
Yes.
29

30
00:01:30,120 --> 00:01:31,560
Nine less than twenty nine?
30

31
00:01:31,560 --> 00:01:31,980
Yes.
31

32
00:01:32,280 --> 00:01:32,880
Twenty five
32

33
00:01:32,880 --> 00:01:33,500
Less than ten?
33

34
00:01:33,510 --> 00:01:33,890
No.
34

35
00:01:34,080 --> 00:01:35,670
So the answer is no.
35

36
00:01:37,350 --> 00:01:43,650
In the second the problem will read an integer N and then read square matrix of N times N so
36

37
00:01:43,650 --> 00:01:46,200
three then read three times three values.
37

38
00:01:46,560 --> 00:01:52,710
You will print two values, the sum of the other triangular matrix and the sum of the lower triangular
38

39
00:01:52,710 --> 00:01:53,250
matrix.
39

40
00:01:53,580 --> 00:01:56,160
The upper triangular matrix is defined at this summation.
40

41
00:01:56,370 --> 00:01:58,980
it covers all the 
41

42
00:01:59,050 --> 00:02:05,700
diagonal and all of the values above the diagonal and the lower triangular covers the diagonal and
42

43
00:02:05,700 --> 00:02:07,580
all of the values covering the diagonal.
43

44
00:02:07,980 --> 00:02:09,900
This example doesn't match this example here.
44

45
00:02:10,200 --> 00:02:14,010
So in our example here, if we'd like to find the upper one,
45

46
00:02:14,220 --> 00:02:23,480
so we should sum eight and fifteen and twenty nine and nine and eight and 15 and 
46

47
00:02:23,520 --> 00:02:31,350
twenty nine and then sixteen and twenty seven and the nine will give us the upper one, for the lower
47

48
00:02:31,350 --> 00:02:31,710
one,
48

49
00:02:31,710 --> 00:02:38,490
it would be the eight and fifteen and twenty-one and twenty-nine and the thirteen and the twenty-five
49

50
00:02:38,490 --> 00:02:39,270
and the fourteen,
50

51
00:02:39,450 --> 00:02:41,850
this is the lower one value.
51

52
00:02:42,390 --> 00:02:46,350
The printing is mainly printing the lower then the upper, the upper and lower.
52

53
00:02:48,850 --> 00:02:55,810
In the third problem, you will read again, N Matrix times M and you will compute another
53

54
00:02:55,810 --> 00:02:58,490
array that is a transpose of it,
54

55
00:02:58,510 --> 00:03:00,820
so you read this matrix here and transpose it.
55

56
00:03:00,970 --> 00:03:03,970
The transpose is a switch from a row to a column,
56

57
00:03:04,180 --> 00:03:06,220
for example, observer one, two, three, five,
57

58
00:03:06,370 --> 00:03:09,840
in the new matrix, it becomes one, two, three, five. Six, seven, eight, nine,
58

59
00:03:09,850 --> 00:03:15,760
the second row is the second column, third row in the third column fourth row the forth column.
59

60
00:03:16,090 --> 00:03:20,350
So if the input matrix is four times five, the output matrix should be five times four.
60

61
00:03:20,620 --> 00:03:26,230
So read this matrix number one, create this matrix number two, or make use of some matrix and do the
61

62
00:03:26,230 --> 00:03:27,430
transpose operation.
62

63
00:03:28,060 --> 00:03:28,350
That's all.
