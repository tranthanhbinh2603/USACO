0
1
00:00:00,900 --> 00:00:05,420
Let's take some homework about that that might help us in the next subjects.
1

2
00:00:07,520 --> 00:00:14,990
The first one about the date and time., the date is a very common data structure in practice. Let's
2

3
00:00:14,990 --> 00:00:21,100
say that you are a software engineer, and your team lead asked you to think in a date struct.
3

4
00:00:21,530 --> 00:00:26,200
So what might be the possible data members and member functions for this struct?
4

5
00:00:26,480 --> 00:00:27,620
There are no requirements.
5

6
00:00:27,630 --> 00:00:29,030
Be flexible and think about that.
6

7
00:00:29,390 --> 00:00:31,700
This is an infrastructure struct.
7

8
00:00:31,850 --> 00:00:32,540
What does it mean
8

9
00:00:32,540 --> 00:00:34,910
Infrastructure?  In big companies,
9

10
00:00:35,090 --> 00:00:42,680
you would find them identifying kinds of projects that everyone is going to use like thinking in a date
10

11
00:00:43,100 --> 00:00:43,700
and time struct.
11

12
00:00:44,360 --> 00:00:46,910
Everyone might need something like that.
12

13
00:00:47,180 --> 00:00:51,680
So the infrastructure projects are typically used by a huge number of teams,
13

14
00:00:51,980 --> 00:00:54,920
they have to be very clean, very well written,
14

15
00:00:55,100 --> 00:00:59,720
they have to be very efficient because they affect many other projects.
15

16
00:01:00,960 --> 00:01:03,020
Noticed there are many printing concerns,
16

17
00:01:03,020 --> 00:01:08,230
for example, the user might want to print in different ways like maybe year, month, day, comma-separated,
17

18
00:01:08,390 --> 00:01:11,570
month, year, comma-separated day, month dash-separated.
18

19
00:01:11,640 --> 00:01:12,500
So think about that.
19

20
00:01:14,120 --> 00:01:14,990
On the other side,
20

21
00:01:14,990 --> 00:01:20,330
there is also a time class where you have hours, minutes, and seconds, ok,  hours, minutes, and seconds.
21

22
00:01:20,810 --> 00:01:26,790
Find two ways to describe the member variables for the time class.
22

23
00:01:27,120 --> 00:01:35,000
There are two ways to present that and think about the positives and
23

24
00:01:35,000 --> 00:01:36,500
negatives of the two choices.
24

25
00:01:37,070 --> 00:01:41,990
Let's say that you are debating with your teammate about one choice like you would like to take choice A,
25

26
00:01:42,110 --> 00:01:48,290
but you would like to choose B, and it's taking hours for you to make a decision. How to be practical in industry
26

27
00:01:48,290 --> 00:01:49,340
and make decisions?
27

28
00:01:50,630 --> 00:01:56,090
OK, this is another class someone wanted to implement a date-time class, he implemented it in this way.
28

29
00:01:57,200 --> 00:02:00,500
Let's say that this is is working very well and no problems.
29

30
00:02:00,500 --> 00:02:03,470
I would like you to provide a critical design tip for this guy.
30

31
00:02:03,470 --> 00:02:04,700
What might be wrong here?
31

32
00:02:05,120 --> 00:02:09,380
There's nothing wrong with the code implementation itself, but something about the design itself.
32

33
00:02:11,360 --> 00:02:18,320
We are developing a banking application, and this is the code of your friend, you are requested
33

34
00:02:18,320 --> 00:02:19,520
to do a design review.
34

35
00:02:19,850 --> 00:02:26,030
Design review in the industry means that you are reviewing someone's code or design and giving some comments
35

36
00:02:26,030 --> 00:02:26,640
on what's wrong.
36

37
00:02:26,960 --> 00:02:29,330
So think about the current data members.
37

38
00:02:29,600 --> 00:02:31,530
Are all of them relevant to the person?
38

39
00:02:31,990 --> 00:02:34,340
Are all of them relevant to the bank application
39

40
00:02:34,370 --> 00:02:40,370
here? Are the data types convenient?. Thinking, probably like two missing critical data members for
40

41
00:02:40,370 --> 00:02:41,750
this class and so on.
41

42
00:02:43,640 --> 00:02:50,980
This is a drawing application, you have triangles, you have circles, you have triangles, and so on.
42

43
00:02:51,380 --> 00:02:57,520
What is the common between these three shapes, and what is special about every one of them?
43

44
00:02:57,740 --> 00:03:03,290
Think of that in terms of the member variables, the member functions, and the function behavior also
44

45
00:03:03,290 --> 00:03:03,620
itself
45

46
00:03:06,470 --> 00:03:07,340
someone implemented
46

47
00:03:07,340 --> 00:03:08,210
this style,
47

48
00:03:08,230 --> 00:03:11,150
he needs a queue of integer, a queue of double, a queue string.
48

49
00:03:11,750 --> 00:03:13,250
They are all working very well,
49

50
00:03:13,250 --> 00:03:14,570
but what is wrong here?
50

51
00:03:16,800 --> 00:03:24,630
A Google search engine, if you tried to Google using Google, you would notice that you have very limited
51

52
00:03:24,630 --> 00:03:25,330
interface.
52

53
00:03:25,420 --> 00:03:30,390
You probably can write your query, you can do some settings, search for videos and images,
53

54
00:03:30,390 --> 00:03:31,020
and that's it.
54

55
00:03:31,620 --> 00:03:37,830
Thinking about the code base of Google, it is definitely one of the biggest code bases,
55

56
00:03:38,010 --> 00:03:45,810
However, we as users only know very little about the code. We only know how to query them,
56

57
00:03:45,810 --> 00:03:46,800
but nothing else.
57

58
00:03:47,310 --> 00:03:50,430
What is good in hiding things from a user?
58

59
00:03:50,660 --> 00:03:58,830
like am as a user, do I need to know that there are 10000 functionalities in the system internally that I
59

60
00:03:58,830 --> 00:03:59,550
would never need.
60

61
00:03:59,790 --> 00:04:01,710
What is good in hiding things from me?
61

62
00:04:03,720 --> 00:04:08,140
What versus how, what means what we're going to do, how is how we are going to do it?
62

63
00:04:08,340 --> 00:04:14,160
For example, let's say we would like to do summation from one to N, then this is the what? we would
63

64
00:04:14,160 --> 00:04:15,740
like to sum the numbers from 1 to N.
64

65
00:04:16,020 --> 00:04:17,580
How is how to do that.
65

66
00:04:17,860 --> 00:04:24,450
I would like you to think in two different ways to sum the numbers from one to N. Now looking at
66

67
00:04:24,450 --> 00:04:29,670
this application, the purpose of the homework, Snapseed  like some application that can help us to
67

68
00:04:29,670 --> 00:04:33,510
manipulate images, doing rotations, cropping, drawing, and so on.
68

69
00:04:33,930 --> 00:04:37,220
Let's say it's supported in Android, iOS and iPad devices.
69

70
00:04:37,680 --> 00:04:43,560
The question is here in terms of the what and how, I would like to provide some thoughts about something
70

71
00:04:43,560 --> 00:04:45,470
like filling the color in a rectangle.
71

72
00:04:45,900 --> 00:04:47,750
Is it the same in Android, IOS, iPad?
72

73
00:04:47,760 --> 00:04:48,230
...
73

74
00:04:48,690 --> 00:04:52,990
What about reading an image from the device from your store?
74

75
00:04:53,890 --> 00:04:55,720
Are these the same in the functionalities?
75

76
00:04:56,000 --> 00:05:00,870
OK, let's say that we found one function that is buggy or even faster way to implement it.
76

77
00:05:01,320 --> 00:05:07,540
How to structure our application codebase to do the minimum code changes that we might need.
77

78
00:05:07,830 --> 00:05:08,610
Think about that.
78

79
00:05:10,400 --> 00:05:17,030
Finally, I would like you to know this isn't homework. You, for a while, would think that the date
79

80
00:05:17,030 --> 00:05:19,150
and time class are very trivial classes.
80

81
00:05:19,400 --> 00:05:26,100
However, in reality, they were behind a lot of bugs in software development. As a reading,
81

82
00:05:26,360 --> 00:05:33,680
I would like you to read about this link, why there are a lot of problems and also
82

83
00:05:33,680 --> 00:05:37,490
how to use it correctly.
83

84
00:05:37,670 --> 00:05:40,970
You don't need to do that right now, maybe just schedule it after the course.
84

85
00:05:42,770 --> 00:05:44,030
There is an interesting thing here,
85

86
00:05:44,330 --> 00:05:46,100
there are a lot of future tasks
86

87
00:05:46,250 --> 00:05:49,670
for a while, you will think they are trivial like the date and time class,
87

88
00:05:50,000 --> 00:05:55,510
but once you think deeper about them, you discover a lot of concerns. For fun,
88

89
00:05:56,060 --> 00:06:01,460
there are a lot of problems attached to date like the year 38 and the year 2000.
89

90
00:06:01,460 --> 00:06:02,270
This happened already,
90

91
00:06:02,270 --> 00:06:03,050
and this is coming.
91

92
00:06:03,200 --> 00:06:08,270
There's something called leap second that is causing problems in also date and time.
92

93
00:06:08,420 --> 00:06:15,060
So this is like good educational links about the date and time issues. That's it.
