0
1
00:00:01,350 --> 00:00:06,700
In the third problem, we would like to find the frequency of the number with the most
1

2
00:00:06,700 --> 00:00:07,350
frequency.
2

3
00:00:07,650 --> 00:00:11,400
However, one challenge is, now numbers are negative values.
3

4
00:00:11,640 --> 00:00:16,530
We know from the frequency array style, we can handle it for positive value, but how can we handle it with
4

5
00:00:16,530 --> 00:00:17,250
negative value?
5

6
00:00:17,820 --> 00:00:22,410
We use an idea common in computer science, like shifting values. Shifting values
6

7
00:00:22,410 --> 00:00:24,770
means you add some values and shift all of them.
7

8
00:00:25,110 --> 00:00:30,120
If you added value of like, say, five hundred over all of these values, they will be shifted
8

9
00:00:30,120 --> 00:00:32,230
to be completely in positive range.
9

10
00:00:32,250 --> 00:00:33,780
So we will make use of this trick.
10

11
00:00:37,530 --> 00:00:38,460
Observe here,
11

12
00:00:44,990 --> 00:00:53,450
I'm creating the maximum of the array to be two hundred and seventy, plus five hundred, plus one, because now this
12

13
00:00:53,660 --> 00:00:57,410
expresses the total numbers that we can find in this big range.
13

14
00:00:58,980 --> 00:01:05,910
And after that, we create a frequency matrix, all of it initializes to zeros, and we iterate over
14

15
00:01:05,910 --> 00:01:09,630
the values. For every value, we add five hundred over it.
15

16
00:01:09,990 --> 00:01:17,650
This shift will make sure that every input value is just from zero to this max minus one.
16

17
00:01:18,060 --> 00:01:23,730
And now, we are incrementing the frequency, and now we can find the answer in the given array.
17

18
00:01:24,090 --> 00:01:29,640
One problem now is the value which is max value in the array now is actually shifted value.
18

19
00:01:29,760 --> 00:01:32,530
So we need to shift it back to the original value.
19

20
00:01:32,760 --> 00:01:36,030
This is how we solve the problem using the shift trick in an easy way.
20

21
00:01:38,940 --> 00:01:42,960
In the next problem, we would like to find the digit frequency of given numbers.
21

22
00:01:43,440 --> 00:01:46,040
I hope the problem wasn't hard for you.
22

23
00:01:46,050 --> 00:01:53,520
All what we need is to start to iterate on the given numbers, take a number by number, and start to
23

24
00:01:53,520 --> 00:01:57,390
get the digit with mod ten, remove the digit.
24

25
00:01:57,630 --> 00:02:04,050
And for every digit, we accumulate it here in the occurrence list. You should handle the X == 0
25

26
00:02:04,290 --> 00:02:05,400
as a special case.
26

27
00:02:05,670 --> 00:02:11,310
Once you are done with that, occurrence, which is an array of length ten, will have the frequency of all
27

28
00:02:11,310 --> 00:02:12,630
of the given numbers.
