0
1
00:00:01,110 --> 00:00:04,020
Let's highlight some information about the Questions Manager.
1

2
00:00:04,920 --> 00:00:09,400
I know the project overall isn't easy, so let's highlight something that might be helpful.
2

3
00:00:09,780 --> 00:00:13,320
We talked before about these two data structures.
3

4
00:00:14,940 --> 00:00:22,050
One of them is like a question ID to the list of questions that we have and another one just map
4

5
00:00:22,050 --> 00:00:28,230
the ID itself to the question object itself, we are trying to make sure that the objects
5

6
00:00:28,230 --> 00:00:32,810
are just in one place, not distributed here and here to avoid copies.
6

7
00:00:33,600 --> 00:00:35,970
The first function here is the Load Database.
7

8
00:00:36,480 --> 00:00:40,350
The Load database has two maps and has a last ID. again
8

9
00:00:40,350 --> 00:00:45,600
Given that I am doing a lot of load base to make sure that two programs are synced together.
9

10
00:00:45,600 --> 00:00:51,000
If there are multiple sessions, I start  by clearing everything, get the  content of the
10

11
00:00:51,000 --> 00:00:57,000
file, iterate on the file line by line, read the question that we have using the current line and
11

12
00:00:57,000 --> 00:00:58,270
updating the current maximum.
12

13
00:00:58,860 --> 00:01:00,420
Now we have year two things.
13

14
00:01:00,420 --> 00:01:04,950
We have the question that we read and we have the question IDs that we would like to update the map
14

15
00:01:04,950 --> 00:01:05,300
with it.
15

16
00:01:06,000 --> 00:01:09,390
So we start to put this ID matches this question.
16

17
00:01:09,390 --> 00:01:11,780
So far, so easy for the parent ID.
17

18
00:01:12,210 --> 00:01:17,430
If the parent ID is minus one, we know that this is the head of a question.
18

19
00:01:17,880 --> 00:01:24,130
So we come back here and create a map from this ID and we put myself on the list.
19

20
00:01:24,870 --> 00:01:33,120
However, if the question belonged to another parent question, then we go to the parent directory,
20

21
00:01:33,220 --> 00:01:35,100
the parent object and book myself.
21

22
00:01:35,400 --> 00:01:42,390
So I'm going to put myself either with myself if I am actually a thread or in the map of the parent
22

23
00:01:42,390 --> 00:01:42,710
itself.
23

24
00:01:42,870 --> 00:01:44,700
This how we load the database.
24

25
00:01:45,750 --> 00:01:52,620
I have your utility function, which fills the user question you provided with the user object and
25

26
00:01:52,620 --> 00:01:55,920
you extract the questions matching this user.
26

27
00:01:56,310 --> 00:01:59,250
For example, you start with clearing the two things.
27

28
00:01:59,640 --> 00:02:06,420
Iterate over all of your questions like a vector of question, actually vector of integer, and then
28

29
00:02:06,930 --> 00:02:14,340
iterate here to over the question itself and get the current question.
29

30
00:02:14,340 --> 00:02:17,520
But observe here, I'm taking it with reference to avoid a copy.
30

31
00:02:18,600 --> 00:02:23,220
If the question from is matching this user ID, then we add it to the from.
31

32
00:02:24,160 --> 00:02:32,490
also if it's matching user ID, then also if the to user ID matches with me 
32

33
00:02:32,920 --> 00:02:33,990
take it, but be careful.
33

34
00:02:34,000 --> 00:02:39,240
Is it a parent question or not based on that, put in the correct map?
34

35
00:02:41,110 --> 00:02:47,430
I have here a function that also prints the user to questions, we have the to questions of the user,
35

36
00:02:47,680 --> 00:02:53,260
so we iterate on the map of this specific user and start to print his questions.
36

37
00:02:55,100 --> 00:03:02,330
And also, we have the from questions, so this is a list of my from questions, again, be careful,
37

38
00:03:02,330 --> 00:03:04,490
avoid copies and print them.
38

39
00:03:09,260 --> 00:03:14,690
There is also a read question utilities here two cases, the target is to read the question that
39

40
00:03:14,690 --> 00:03:20,620
is valid and we check that this question ID exists really in the map, otherwise this is invalid.
40

41
00:03:20,630 --> 00:03:22,800
1- if the read question failed, 
41

42
00:03:22,820 --> 00:03:24,860
I'm calling myself in a recursive way.
42

43
00:03:25,760 --> 00:03:29,000
This isn't the best coding style, but I wanted to teach you that.
43

44
00:03:29,570 --> 00:03:36,650
And otherwise, we can get the question and make one more verification that this question is really your
44

45
00:03:36,650 --> 00:03:37,170
question.
45

46
00:03:37,640 --> 00:03:39,440
So you aren't playing with me.
46

47
00:03:41,650 --> 00:03:47,130
And this one is a similar one, it just for whatever user, so it's more flexible.
47

48
00:03:48,600 --> 00:03:53,520
We have here a function that's answering questions, so it starts by taking what is a question ID
48

49
00:03:53,520 --> 00:03:56,130
get the question, get the answer updated.
49

50
00:03:57,120 --> 00:04:00,150
We are reading a couple of getline to avoid the last enter.
50

51
00:04:01,710 --> 00:04:08,370
Deleting that question we have here, we get the question ID, yeah, this function is a bit tricky
51

52
00:04:09,420 --> 00:04:15,410
in practice when you have more than a data structure and all of them contain the data,
52

53
00:04:15,780 --> 00:04:17,220
this is what we call a multi view.
53

54
00:04:17,520 --> 00:04:20,840
Multi view means that the same data exists in more than a data structure.
54

55
00:04:21,090 --> 00:04:23,520
And now we would like to update or remove something.
55

56
00:04:23,790 --> 00:04:30,600
You have to code it in a careful way to make sure you are removing from all of them or updating in all
56

57
00:04:30,600 --> 00:04:31,000
of them.
57

58
00:04:31,410 --> 00:04:37,650
So that's why I would have here this list of IDs to remove and I'm marking what to remove exactly.
58

59
00:04:37,890 --> 00:04:41,190
And then going here to remove it from the other list.
59

60
00:04:41,760 --> 00:04:44,760
Also observed that there are two cases.
60

61
00:04:45,220 --> 00:04:53,880
Either we are removing a single question that is like, for example, a no thread or a threaded question.
61

62
00:04:53,880 --> 00:04:58,800
If you are removing a question that is a thread, then you need to remove it and remove all of the questions
62

63
00:04:59,160 --> 00:05:00,510
around this question too.
63

64
00:05:02,490 --> 00:05:11,760
And so on, yeah, very similar concept here we are updating the data set here, list feed is just iterating
64

65
00:05:11,760 --> 00:05:15,210
and printing, asking the question here.
65

66
00:05:15,480 --> 00:05:19,580
I will take the data from the user, verify that is in order or not, and so on.
66

67
00:05:19,860 --> 00:05:25,530
And the new ID and put it in the list based on is it thread or not?
67

68
00:05:25,920 --> 00:05:29,070
So this is mainly the ask question one here.
68

69
00:05:29,910 --> 00:05:33,060
The final thing that I will leave it for you is the mean.
69

70
00:05:33,060 --> 00:05:34,830
Here we are a choice by choice.
70

71
00:05:34,830 --> 00:05:44,160
Would we started to call our own functionalities, observe here with every run I call the LoadDatabase here to
71

72
00:05:44,190 --> 00:05:45,410
keep reloading.
72

73
00:05:45,420 --> 00:05:51,070
This helped me to make two sessions are working in parallel as much as possible.
73

74
00:05:52,110 --> 00:05:52,620
That's all.
74

75
00:05:52,620 --> 00:05:54,780
I hope you enjoyed the project.
75

76
00:05:54,900 --> 00:05:56,040
I know it's challenging.
76

77
00:05:56,280 --> 00:05:57,180
It takes time.
77

78
00:05:57,180 --> 00:05:57,900
It takes time.
78

79
00:05:58,080 --> 00:06:03,780
I know many students complain that doing a project is hard and there is no way.
79

80
00:06:04,290 --> 00:06:06,390
There's no other shortcuts you have.
80

81
00:06:06,570 --> 00:06:08,910
Like there is some part of struggling and suffering.
81

82
00:06:08,910 --> 00:06:09,390
No way.
82

83
00:06:09,930 --> 00:06:17,010
And I think that you did enough short exercises, it's time to challenge yourself with more such
83

84
00:06:17,740 --> 00:06:18,990
big level of projects.
