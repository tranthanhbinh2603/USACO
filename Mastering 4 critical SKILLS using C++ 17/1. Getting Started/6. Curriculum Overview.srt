0
1
00:00:01,410 --> 00:00:09,090
Let's provide an overview for the content of this very in-depth course, we can say it consists mainly
1

2
00:00:09,090 --> 00:00:10,770
of four components.
2

3
00:00:11,040 --> 00:00:13,200
The first one is, The Programming Fundamentals.
3

4
00:00:13,230 --> 00:00:19,380
This is close to Programming(1) level course in your university, it's covering mainly the fundamentals
4

5
00:00:19,380 --> 00:00:20,800
of programming languages.
5

6
00:00:20,880 --> 00:00:26,190
I know that these keywords at the moment might be puzzling, but they are representing the fundamental
6

7
00:00:27,480 --> 00:00:32,520
concepts of programming language and actually in any programming language you will have to find them.
7

8
00:00:33,300 --> 00:00:41,150
The second set of topics are a bit advanced topics in the language and like (pointers , STL and the
8

9
00:00:41,160 --> 00:00:45,810
exception handling the details of the competition process itself and how to use the debugger).
9

10
00:00:46,800 --> 00:00:54,000
The third component of this course is the object oriented programming, a very fundamental paradigm
10

11
00:00:54,000 --> 00:00:55,900
to use in Software Engineering development.
11

12
00:00:56,220 --> 00:01:04,620
The paradigm consists of a specific like six fundamentals concepts, representing the (OOP). One of the
12

13
00:01:04,620 --> 00:01:10,170
very unique things in this course is that I embedded in the homework, a lot of design principles and
13

14
00:01:10,170 --> 00:01:15,300
patterns, so that later when you go and study a course of design principles and design patterns, you
14

15
00:01:15,300 --> 00:01:18,710
will have a very strong intuition and intuitive usage.
15

16
00:01:18,720 --> 00:01:22,200
Why we need such a design patterns and why designing them in this way.
16

17
00:01:23,550 --> 00:01:29,520
The fourth and very unique component in this course is a wide coverage to (C++) 11, 14 and 17.
17

18
00:01:29,770 --> 00:01:33,990
I'm covering a lot of the important and even less important details.
18

19
00:01:35,340 --> 00:01:43,140
I would say the majority of the courses here is just focusing on (C++ 11) with a minor exception.
19

20
00:01:43,950 --> 00:01:47,220
So this course has a very wide and very deep coverage.
20

21
00:01:47,370 --> 00:01:50,500
Definitely, modern (C++) is extremely huge.
21

22
00:01:50,670 --> 00:01:56,100
So I'm trying to focus here on the very fundamental and the very important ones and also the less important
22

23
00:01:56,100 --> 00:01:59,860
topics if you have interest in very, very narrow, specific topics.
23

24
00:01:59,880 --> 00:02:03,570
Please use the outline to verify what exists and what doesn't.
24

25
00:02:04,830 --> 00:02:10,800
And finally, there is an extensive set of quizzes, practice and homework and projects in this course
25

26
00:02:11,010 --> 00:02:12,260
to make you really strong.
26

27
00:02:12,270 --> 00:02:17,670
One of the very common complaints in courses, they lack the practice and the quizzes that would make
27

28
00:02:17,670 --> 00:02:24,030
you really skilled in (C++) programming and ready for the next courses like Software engineering, Data structures
28

29
00:02:24,030 --> 00:02:24,780
and Algorithms.
29

30
00:02:25,980 --> 00:02:30,890
In terms of books, also, I would like to highlight about that, I would say the content is very deep.
30

31
00:02:31,410 --> 00:02:35,930
Most probably you don't have to read the book, but in case, if you would like, there are two suggestions.
31

32
00:02:36,210 --> 00:02:38,990
The first one is: (A First Book C++).
32

33
00:02:39,300 --> 00:02:41,370
This book is very well written.
33

34
00:02:41,550 --> 00:02:43,380
It would be very smooth reading.
34

35
00:02:43,380 --> 00:02:44,670
But there is one problem here.
35

36
00:02:44,850 --> 00:02:46,980
It's focusing on the classical (C++).
36

37
00:02:47,220 --> 00:02:49,470
Classical (C++) is before (C++ 11).
37

38
00:02:49,830 --> 00:02:50,790
It's still a good book.
38

39
00:02:50,790 --> 00:02:51,820
Still covering a lot.
39

40
00:02:51,840 --> 00:02:58,230
Feel free to buy it. But if you would like a much more modern choice, then you can go with( C++ How to program)
40

41
00:02:58,230 --> 00:03:01,700
which is covering up to (C++ 14).
41

42
00:03:01,710 --> 00:03:02,640
And this means a lot.
42

43
00:03:03,270 --> 00:03:04,700
This book is very well written.
43

44
00:03:04,920 --> 00:03:08,430
The guy who wrote it is really aware of software engineering and aware of industry.
44

45
00:03:08,430 --> 00:03:10,650
So the book has a lot beyond that.
45

46
00:03:10,830 --> 00:03:18,360
If you are done with this book and would like really then to learn more about (C++ 17)
46

47
00:03:18,360 --> 00:03:19,920
you can search for Internet.
47

48
00:03:19,920 --> 00:03:25,490
There are books that are dedicated only to cover (C++ 17) extra topics.
48

49
00:03:26,130 --> 00:03:26,700
That's it! :)
0

50
00:00:01,410 --> 00:00:09,090
Let's provide an overview for the content of this very in-depth course. We can say it consists mainly
1

51
00:00:09,090 --> 00:00:10,770
of four components.
2

52
00:00:11,040 --> 00:00:13,200
The first one is "The Programming Fundamentals".
3

53
00:00:13,230 --> 00:00:19,380
This is close to Programming(1) level course in your university, it is covering mainly the fundamentals
4

54
00:00:19,380 --> 00:00:20,800
of programming languages.
5

55
00:00:20,880 --> 00:00:26,190
I know that these keywords at the moment might be puzzling, but they are representing the fundamental
6

56
00:00:27,480 --> 00:00:32,520
concepts of programming language and actually in any programming language you will have to find them.
7

57
00:00:33,300 --> 00:00:41,150
The second set of topics are a bit advanced topics in the language and like (pointers , STL, the
8

58
00:00:41,160 --> 00:00:45,810
exception handling, the details of the compilation process itself, and how to use a debugger).
9

59
00:00:46,800 --> 00:00:54,000
The third component of this course is "The Object Oriented Programming". A very fundamental paradigm
10

60
00:00:54,000 --> 00:00:55,900
to use in Software Engineering development.
11

61
00:00:56,220 --> 00:01:04,620
The paradigm consists of a specific like six fundamental concepts, representing the (OOP). One of the
12

62
00:01:04,620 --> 00:01:10,170
very unique things in this course is that I embedded in the homework, a lot of design principles and
13

63
00:01:10,170 --> 00:01:15,300
patterns. So that later when you go and study a course of design principles and design patterns, you
14

64
00:01:15,300 --> 00:01:18,710
will have a very strong intuition and intuitive usage
15

65
00:01:18,720 --> 00:01:22,200
why we need such a design patterns and why designing them in this way.
16

66
00:01:23,550 --> 00:01:29,520
The fourth and very unique component in this course is a wide coverage to (C++) 11, 14 and 17.
17

67
00:01:29,770 --> 00:01:33,990
I'm covering a lot of the important and even less important details.
18

68
00:01:35,340 --> 00:01:43,140
I would say the majority of the courses here are just focusing on (C++ 11) with a minor exception.
19

69
00:01:43,950 --> 00:01:47,220
So this course has a very wide and very deep coverage.
20

70
00:01:47,370 --> 00:01:50,500
Definitely, modern (C++) is extremely huge.
21

71
00:01:50,670 --> 00:01:56,100
So I'm trying to focus here on the very fundamental and the very important ones and also the less important
22

72
00:01:56,100 --> 00:01:59,860
topics. If you have an interest in very, very narrow specific topics,
23

73
00:01:59,880 --> 00:02:03,570
please use the outline to verify what exists and what doesn't.
24

74
00:02:04,830 --> 00:02:10,800
And finally, there is an extensive set of quizzes, practice, homework, and projects in this course
25

75
00:02:11,010 --> 00:02:12,260
to make you really strong.
26

76
00:02:12,270 --> 00:02:17,670
One of the very common complaints in courses, they lack the practice and the quizzes that would make
27

77
00:02:17,670 --> 00:02:24,030
you really skilled in (C++) programming and ready for the next courses like Software engineering, Data structures
28

78
00:02:24,030 --> 00:02:24,780
and Algorithms.
29

79
00:02:25,980 --> 00:02:30,890
In terms of books, also, I would like to highlight about that. I would say the content is very deep.
30

80
00:02:31,410 --> 00:02:35,930
Most probably, you don't have to read a book, but in case if you like, there are two suggestions.
31

81
00:02:36,210 --> 00:02:38,990
The first one is: (A First Book C++).
32

82
00:02:39,300 --> 00:02:41,370
This book is very well written.
33

83
00:02:41,550 --> 00:02:43,380
It will be a very smooth reading.
34

84
00:02:43,380 --> 00:02:44,670
But there is one problem here.
35

85
00:02:44,850 --> 00:02:46,980
It is focusing on the classical (C++).
36

86
00:02:47,220 --> 00:02:49,470
Classical (C++) is before (C++ 11).
37

87
00:02:49,830 --> 00:02:50,790
It is still a good book.
38

88
00:02:50,790 --> 00:02:51,820
Still covering a lot.
39

89
00:02:51,840 --> 00:02:58,230
Feel free to buy it. But if you would like a much more modern choice, then you can go with( C++ How to program)
40

90
00:02:58,230 --> 00:03:01,700
which is covering up to (C++ 14),
41

91
00:03:01,710 --> 00:03:02,640
and this means a lot.
42

92
00:03:03,270 --> 00:03:04,700
This book is very well written.
43

93
00:03:04,920 --> 00:03:08,430
The guy who wrote it is really aware of software engineering and aware of the industry.
44

94
00:03:08,430 --> 00:03:10,650
So the book has a lot beyond that.
45

95
00:03:10,830 --> 00:03:18,360
If you are done with this book and would like really then to learn more about (C++ 17)
46

96
00:03:18,360 --> 00:03:19,920
you can search on the internet.
47

97
00:03:19,920 --> 00:03:25,490
There are books that are dedicated only to cover (C++ 17) extra topics.
48

98
00:03:26,130 --> 00:03:26,700
That is it. :)
