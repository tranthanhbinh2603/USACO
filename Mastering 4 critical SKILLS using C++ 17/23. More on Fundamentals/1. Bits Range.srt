0
1
00:00:01,170 --> 00:00:07,500
In this section, we will highlight some of the fundamentals of the language that I intentionally skipped
1

2
00:00:07,500 --> 00:00:12,030
in the beginning of the course because they just cause puzzling for the students and don't have a big
2

3
00:00:12,030 --> 00:00:12,410
value.
3

4
00:00:12,660 --> 00:00:16,470
So we'll be discussing a wide variety of of different things.
4

5
00:00:16,770 --> 00:00:19,950
The first thing is very fundamental about the bits information.
5

6
00:00:20,520 --> 00:00:25,230
So typically everything in computer is built with zeros and ones.
6

7
00:00:25,620 --> 00:00:33,620
This means in the very, very low level of of the computer systems, there are just zeros and ones.
7

8
00:00:33,630 --> 00:00:35,240
And this is mainly for the simplicity
8

9
00:00:35,250 --> 00:00:43,800
like it's easier to build a computer this way. Zeros and ones more about like..., think of them, for
9

10
00:00:43,800 --> 00:00:46,170
example, like the electricity on and off and things like that.
10

11
00:00:47,220 --> 00:00:52,350
So this let's develop some ideas about the binary system.
11

12
00:00:52,400 --> 00:00:54,980
The word binary, as you know, refers to the 0&1.
12

13
00:00:55,440 --> 00:00:59,120
There are many system representations when it comes to numbers.
13

14
00:00:59,550 --> 00:01:05,190
We typically, as humans, use all the time what we call the decimal system. The decimal system is referring
14

15
00:01:05,190 --> 00:01:09,040
to the system of 10 digits from 0 to 9.
15

16
00:01:09,870 --> 00:01:15,660
So when you have a 1 digit, you can make 10 numbers, right, from 0 to 9.
16

17
00:01:16,410 --> 00:01:21,080
If you have 2 digits, you can make 100 numbers from 0 to 99.
17

18
00:01:21,120 --> 00:01:23,640
So we can represented like 10 to the power 2.
18

19
00:01:24,450 --> 00:01:30,060
If you have 3 digits, you can have up to 1000 numbers from 0 to 999.
19

20
00:01:30,570 --> 00:01:35,780
So in general, if I'm telling you we have a number of k digits, it means
20

21
00:01:35,800 --> 00:01:39,840
we can have up to 10 to the power k numbers in this range.
21

22
00:01:40,220 --> 00:01:42,130
Please make sure you understand the logic here.
22

23
00:01:43,440 --> 00:01:45,450
Now, there is a correspondence in other systems.
23

24
00:01:45,450 --> 00:01:51,630
For example, in the binary system, if we have a single number, ..., if we have a single
24

25
00:01:51,630 --> 00:01:56,210
bit, we call it bit here. If we have a single bit, which is just 0 or 1.
25

26
00:01:56,520 --> 00:02:02,370
So we have 2 numbers, but if we have 2 bits, we have to 2 to the power 2 numbers, which are 0
26

27
00:02:02,370 --> 00:02:04,720
0, 01,  10,  11 .
27

28
00:02:04,890 --> 00:02:07,740
These are the four different numbers that we can have.
28

29
00:02:08,250 --> 00:02:14,280
If you have 3 bits, we can have 8 numbers, 8 different binary numbers, 000,
29

30
00:02:14,280 --> 00:02:21,390
001, 010, 100, 111, 011, 101, 110 . 
30

31
00:02:21,510 --> 00:02:25,080
So these are like 8 different numbers when it comes to 3 bits.
31

32
00:02:25,500 --> 00:02:31,770
So in general, if you have k bits, which every one of them is just 0 or 1 , we have up to 2
32

33
00:02:31,770 --> 00:02:32,640
to the power k 
33

34
00:02:32,640 --> 00:02:33,300
different numbers.
34

35
00:02:33,690 --> 00:02:40,350
OK, so as you notice, in general, the base here represents  the number of different digits, which are
35

36
00:02:40,350 --> 00:02:41,880
2 here in our case, but 10 here 
36

37
00:02:41,880 --> 00:02:45,690
in this case. We also have something we call it a byte.
37

38
00:02:46,230 --> 00:02:48,230
The byte is 8 bits.
38

39
00:02:48,420 --> 00:02:51,420
So it is just we are giving some name to a bigger unit.
39

40
00:02:52,200 --> 00:02:58,440
And if you have 8 bits, you have 2 to 256 different possible numbers that
40

41
00:02:58,440 --> 00:02:59,190
we can generate.
41

42
00:02:59,790 --> 00:03:01,290
What if I have 4 bytes?
42

43
00:03:01,620 --> 00:03:03,400
4 bytes are 32 bits.
43

44
00:03:03,810 --> 00:03:06,660
So this means we have up to 2 to the power this number.
44

45
00:03:07,360 --> 00:03:10,320
OK, what if we have 31 bits,
45

46
00:03:10,620 --> 00:03:12,110
we have this number.
46

47
00:03:12,390 --> 00:03:14,330
These 2 numbers are very important.
47

48
00:03:14,360 --> 00:03:21,150
The 32 case and 31 case I would like you to have your eyes very
48

49
00:03:21,150 --> 00:03:23,370
familiar with these 2 numbers. In general,
49

50
00:03:23,370 --> 00:03:31,800
here's a table of all of the different cases, and I would say the first column here is very important
50

51
00:03:31,800 --> 00:03:32,550
to memorize.
51

52
00:03:32,940 --> 00:03:37,560
Also, the last 2 numbers here are important to memorize and also it's good to remember that 2 to the
52

53
00:03:37,560 --> 00:03:39,210
power 20 is around one million.
53

54
00:03:41,550 --> 00:03:48,410
OK, so let's take it one more step further, if we have 4 bits, we have up to 16 numbers.
54

55
00:03:48,690 --> 00:03:51,680
How many numbers from 1 to 16? 16 numbers.
55

56
00:03:51,690 --> 00:03:52,600
But this is one based.
56

57
00:03:52,650 --> 00:03:53,820
What about zero based?
57

58
00:03:54,300 --> 00:03:55,770
It's from 0 to 15.
58

59
00:03:55,770 --> 00:03:58,230
We have 16 numbers. So far,
59

60
00:03:58,230 --> 00:03:58,880
this is good.
60

61
00:03:58,890 --> 00:04:05,640
But notice that when we refer to that, we are all the time referring to positive numbers or 0 and
61

62
00:04:05,640 --> 00:04:06,380
positive numbers.
62

63
00:04:06,390 --> 00:04:13,440
So we have from 0 to 15. If we would like to develop something that would allow us to represent positive
63

64
00:04:13,440 --> 00:04:19,200
and negative numbers, we can divide this range to two halves, one half from 0 to 7.
64

65
00:04:19,380 --> 00:04:24,960
And these are 8 numbers representing positive numbers and another range from -8  to -1
65

66
00:04:24,960 --> 00:04:26,220
representing 8 numbers. 
66

67
00:04:26,730 --> 00:04:32,730
I would like you to think from the perspective of the people who are designing the language, like let's
67

68
00:04:32,730 --> 00:04:37,560
say you are saying, oh, here we are using 4 bits to represent numbers, but this is just from
68

69
00:04:37,560 --> 00:04:38,250
0 to 15.
69

70
00:04:38,250 --> 00:04:43,770
We would like to give people positive or negative numbers. I would like him to say integer x equals -10.
70

71
00:04:43,770 --> 00:04:45,090
How he can do that?
71

72
00:04:45,420 --> 00:04:52,230
So we can say take our maximum capabilities from 0 to 15, divide it to 2  halves and say what
72

73
00:04:52,230 --> 00:04:57,180
is this use to have these numbers to allow positive and zero and the other half to the negative values.
73

74
00:04:57,490 --> 00:05:01,050
Try to make sure that you're familiar with what I'm saying.
74

75
00:05:02,810 --> 00:05:08,330
If we have 8 bits, then 8 bits are 256. If we would like to support positive
75

76
00:05:08,330 --> 00:05:10,010
and negative, we can divide to two halves.
76

77
00:05:10,190 --> 00:05:16,910
So one half from 0 to 127 and another half from the -128
77

78
00:05:16,910 --> 00:05:17,730
to -1.
78

79
00:05:18,200 --> 00:05:23,010
So the overall range is like from n-128 to 127.
79

80
00:05:23,210 --> 00:05:29,030
So always keep in mind this style. This number is like one plus this number if it's a positive
80

81
00:05:29,030 --> 00:05:29,390
number.
81

82
00:05:30,320 --> 00:05:36,720
Let's make it further, if we have 32 bits, so if you have 32 bits, you have this very big number.
82

83
00:05:37,250 --> 00:05:44,060
So if it's unsigned, which means there are no sign. Then we have from 0 to 95, notice 
83

84
00:05:44,060 --> 00:05:46,280
this 95, but the number is 96.
84

85
00:05:46,760 --> 00:05:51,340
If it would like to support positive and negative.
85

86
00:05:51,530 --> 00:05:56,000
We have from 0 to the half here and from this negative number to this one.
86

87
00:05:56,210 --> 00:06:01,460
So again, this is a complete range here and notice that this is 47 but this is 48.
87

88
00:06:02,180 --> 00:06:07,730
If you would like to provide 64 bit, then you again have this very big range to this range.
88

89
00:06:08,330 --> 00:06:11,080
It's also good to familiarize yourself with this very big number.
89

90
00:06:12,410 --> 00:06:12,980
That's all.
90

91
00:06:13,470 --> 00:06:20,090
The moral of that is how many numbers we can represent when we have some k bits and dividing them to
91

92
00:06:20,090 --> 00:06:23,180
two halves to represent some positive numbers and some negative numbers.
