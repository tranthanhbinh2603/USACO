0
1
00:00:01,140 --> 00:00:06,680
In C++ 17, there is a nice change for the if-statement function to allow now an initializer.
1

2
00:00:10,500 --> 00:00:13,580
Let's read this code here.
2

3
00:00:14,040 --> 00:00:16,710
We are defining some variable X with 11.
3

4
00:00:16,950 --> 00:00:20,340
Then we're checking if X is odd, we are printing a message.
4

5
00:00:20,340 --> 00:00:25,450
Otherwise, it is even now in line 13, variable X is still visible for us.
5

6
00:00:25,920 --> 00:00:26,700
Question here.
6

7
00:00:26,970 --> 00:00:28,810
Do we really need that?
7

8
00:00:29,010 --> 00:00:30,000
Sometimes, yes.
8

9
00:00:30,000 --> 00:00:36,600
But sometimes no. If it is important to have it here, then the scope like now in
9

10
00:00:36,600 --> 00:00:41,910
this area, is limited now because of the variable X like X is visible.
10

11
00:00:41,920 --> 00:00:43,020
So it might be a problem.
11

12
00:00:43,530 --> 00:00:50,300
C++ 17 is trying to help with this problem by reducing the scope a little bit if we have to.
12

13
00:00:50,700 --> 00:00:57,870
Now look here we have in the new C++ style something like if initialize semicolon ";" condition.
13

14
00:00:58,170 --> 00:01:02,130
So we know, we see we have two things and there is a semicolon in between.
14

15
00:01:02,580 --> 00:01:09,240
In the first one here, you can initialize something and then you write your normal condition.
15

16
00:01:09,660 --> 00:01:12,180
Now your code goes as normal as you would like.
16

17
00:01:12,390 --> 00:01:14,130
The variable Y that you initialize.
17

18
00:01:14,130 --> 00:01:18,870
Is visible in every if-else inside your if-else block here.
18

19
00:01:19,410 --> 00:01:25,740
But the interesting part here is starting from line 20 after this if-else block the variable Y
19

20
00:01:25,950 --> 00:01:27,920
isn't visible anymore.
20

21
00:01:28,200 --> 00:01:30,470
So that is all, this is all what happened.
21

22
00:01:30,540 --> 00:01:35,700
Instead of initializing something here, you can put it at the beginning of the if condition and.
22

23
00:01:35,700 --> 00:01:39,330
then it is invisible in the remaining of your program.
23

24
00:01:39,330 --> 00:01:42,440
It is only visible inside your if-else block.
24

25
00:01:42,630 --> 00:01:45,630
This makes your code more like a more cleaner.
25

26
00:01:47,070 --> 00:01:53,370
It would not be widely applicable for your cases, but it will help from time to time.
26

27
00:01:55,080 --> 00:01:55,620
That's it :)
